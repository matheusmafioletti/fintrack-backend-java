version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fintrack-postgres
    environment:
      POSTGRES_DB: fintrack
      POSTGRES_USER: fintrack_user
      POSTGRES_PASSWORD: fintrack_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fintrack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fintrack_user -d fintrack"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fintrack-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fintrack
      SPRING_DATASOURCE_USERNAME: fintrack_user
      SPRING_DATASOURCE_PASSWORD: fintrack_pass
      JWT_SECRET: your-super-secret-key-change-in-production-minimum-256-bits-required
      JWT_EXPIRATION: 3600000
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fintrack-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fintrack-network:
    driver: bridge
